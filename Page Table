kernel/riscv.h:
#define PTE_V (1 << 0) // valid
#define PTE_R (1 << 1)
#define PTE_W (1 << 2)
#define PTE_X (1 << 3)
#define PTE_U (1 << 4) // user can access

// shift a physical address to the right place for a PTE.
#define PA2PTE(pa) ((((uintptr_t)(pa)) >> 12) << 10)

#define PTE2PA(pte) (((pte >> 10) & 0xFFFFF) << 12)


kernel/vm.c:
pte_t *
walk(pagetable_t pagetable, uint32_t va, int alloc)
{
  if(va >= MAXVA)
    panic("walk");

  for(int level = 2; level > 0; level--) {
    pte_t *pte = &pagetable[PX(level, va)];
    if(*pte & PTE_V) {
      pagetable = (pagetable_t)PTE2PA(*pte);
    } else {
      if(!alloc || (pagetable = (pde_t*)(uintptr_t)kalloc()) == 0)
        return 0;
